{"version":3,"sources":["Router/GState.js","Component/searchBox/index.js","Layout/Header.js","Component/VideoCard/index.js","Component/listSlide/index.js","Page/Home/HomePresenter.js","Api/api.js","Page/Home/index.js","Page/Home/HomeContainer.js","Page/Tv/TvPresenter.js","Page/Tv/index.js","Page/Tv/TvContainer.js","Page/Movie/MoviePresenter.js","Page/Movie/index.js","Page/Movie/MovieContainer.js","Page/Search/SearchPresenter.js","Page/Search/SearchNoDataPresenter.js","Page/Search/index.js","Page/Search/SearchContainer.js","Page/Detail/DetailPresenter.js","Page/Detail/index.js","Page/Detail/DetailContainer.js","Router/RouterSet.js","Router/App.js","index.js"],"names":["GState","React","createContext","GStateProvider","children","useState","value","depth1","setDepth1","Provider","SearchBox","className","type","placeholder","onKeyUp","e","target","keycode","keyCode","val","window","location","href","searchSubmit","Header","gnbWrapEl","useRef","useContext","id","ref","to","VideoCard","name","date","rating","mediaType","videoID","posterUrl","src","alt","average","avg","classTxt","decimal","parseInt","Math","round","averageFn","SwiperCore","use","Navigation","ListSlide","title","data","swiperEl","useEffect","onClick","current","swiper","slidePrev","wrapperTag","slidesPerView","slidesPerGroup","spaceBetween","simulateTouch","map","info","i","key","tag","onLoad","update","poster_path","original_name","release_date","split","first_air_date","vote_average","slideNext","HomePresenter","moviePopular","tvPopular","url","useRouteMatch","Api","axios","create","baseURL","params","api_key","language","tvApi","get","movieApi","searchApi","keyword","query","encodeURIComponent","detailApi","append_to_response","HomeContainer","state","error","loading","results","this","setState","Component","TvPresenter","airingToday","topRated","popular","TvContainer","MoviePresenter","nowPlaying","upcoming","MovieContainer","SearchPresenter","searchResults","length","original_title","SearchNoDataPresenter","SearchContainer","props","match","replace","tvResults","movieResults","DetailPresenter","result","runtime","last_air_date","episode_run_time","genres","overview","DetailContainer","RouterSet","path","exact","component","Home","Tv","Movie","Detail","Search","from","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e64e3cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GState = React.createContext(null);\n\n// 전역으로 사용할 변수 및 function 주입\nconst GStateProvider = ({ children }) => {\n\n\t// 화면 메뉴 1 depth name defualt home\n\tconst [depth1, setDepth1] = useState('');\n\n\tconst value = {\n\t\tdepth1,\n\t\tsetDepth1,\n\t};\n\t\n\treturn <GState.Provider value={value}>{children}</GState.Provider>;\n};\n\nGStateProvider.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nexport default GStateProvider;\n","import React from 'react';\n\nconst SearchBox = ()=>{\n\tconst searchSubmit = (e)=>{\n\t\tvar target = e.target;\n\t\tvar keycode = e.keyCode;\n\t\tvar val = target.value;\n\n\t\tif(keycode === 13) {\n\t\t\t// console.log(location);\n\t\t\t// history.push(`/search/:${val}`);\n\t\t\twindow.location.href = `/search/:${val}`;\n\t\t}\n\t}\n\n\treturn(\n\t\t<label className=\"searchBox\">\n\t\t\t<input type=\"text\" placeholder=\"검색어 입력\" onKeyUp={(e)=>searchSubmit(e)} />\n\t\t</label>\n\t);\n}\n\nexport default SearchBox;","import React, {useRef, useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport {GState} from 'Router/GState';\nimport SearchBox from 'Component/searchBox'\n\n\nconst Header = () => {\n\tconst gnbWrapEl = useRef(null);\n\tconst {depth1} = useContext(GState);\n\n\treturn (\n\t\t<header id=\"header\">\n\t\t\t<nav className=\"gnb\">\n\t\t\t\t<ul ref={gnbWrapEl}>\n\t\t\t\t\t<li className={depth1 === '' ? 'active' : ''}>\n\t\t\t\t\t\t<Link to={\"/\"}>Home</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className={depth1 === 'tv' ? 'active' : ''}>\n\t\t\t\t\t\t<Link to={\"/tv\"}>TV</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className={depth1 === 'movie' ? 'active' : ''}>\n\t\t\t\t\t\t<Link to={\"/movie\"}>Movie</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\n\t\t\t<SearchBox />\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst VideoCard = ({name, date, rating, mediaType, videoID, posterUrl})=>{\n\tconst averageFn = (average)=>{\n\t\tvar avg = average / 2;\n\t\tvar classTxt = 's';\n\t\tvar integer = parseInt(avg, 10);\n\t\tvar decimal = avg % integer;\n\n\t\tclassTxt += `0${Math.round(avg)}`;\n\t\tclassTxt += decimal <= 0.5 && decimal > 0 ? 'Half' : '';\n\n\t\treturn(\n\t\t\t<>\n\t\t\t\t<span className={`starAverage ${classTxt}`}>\n\t\t\t\t\t<em className=\"num\">{avg}</em>\n\t\t\t\t</span>\n\t\t\t</>\n\t\t);\n\t\t\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<Link to={`/detail/:${mediaType}/:${videoID}`} className=\"videoCardBox\">\n\t\t\t\t<span className={`img ${posterUrl === '' ? 'noImage' : ''}`}>\n\t\t\t\t\t{posterUrl !== '' && <span><img src={`https://image.tmdb.org/t/p/w300/${posterUrl}`} alt=\"\" /></span>}\n\t\t\t\t</span>\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<strong className=\"name\">{name}</strong>\n\t\t\t\t\t{\n\t\t\t\t\t\tdate && \n\t\t\t\t\t\t<span className=\"date\">\n\t\t\t\t\t\t\t{date}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t\t{averageFn(rating)}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t</>\n\t);\n}\n\nVideoCard.propTypes = {\n\tmediaType: PropTypes.string.isRequired,\n\tvideoID: PropTypes.number.isRequired,\n\tposterUrl: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tdate: PropTypes.any,\n\trating: PropTypes.number.isRequired,\n}\n\nexport default VideoCard;","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport VideoCard from 'Component/VideoCard';\n\n// import Swiper core and required components\nimport SwiperCore, { Navigation } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n// install Swiper components\nSwiperCore.use([Navigation]);\n\nconst ListSlide = ({title, type, data})=>{\n\tconst swiperEl = useRef(null);\n\tconst slideItemLoaded = ()=>{\n\t\tswiperEl.current.swiper.update();\n\t}\n\tconst swiperPrev = ()=>{\n\t\tswiperEl.current.swiper.slidePrev(600);\n\t}\n\tconst swiperNext = ()=>{\n\t\tswiperEl.current.swiper.slideNext(600);\n\t}\n\n\tuseEffect(()=>{\n\n\t});\n\n\treturn(\n\t\t<div className=\"listSlideWrap\">\n\t\t\t{\n\t\t\t\ttitle && \n\t\t\t\t<div className=\"titBox\">\n\t\t\t\t\t<strong className=\"tit\">{title}</strong>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{\n\t\t\t\tdata && \n\t\t\t\t<>\n\t\t\t\t\t<button type=\"button\" className=\"slide-prev\" onClick={()=>swiperPrev()}><em>이전</em></button>\n\t\t\t\t\t<Swiper\n\t\t\t\t\t\twrapperTag={'ul'}\n\t\t\t\t\t\t// freeMode={true}\n\t\t\t\t\t\tslidesPerView={5}\n\t\t\t\t\t\tslidesPerGroup={5}\n\t\t\t\t\t\tspaceBetween={20}\n\t\t\t\t\t\tsimulateTouch={false}\n\t\t\t\t\t\tref={swiperEl}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata.map((info, i)=>(\n\t\t\t\t\t\t\t\t<SwiperSlide\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\ttag={'li'}\n\t\t\t\t\t\t\t\t\tonLoad={()=>slideItemLoaded()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<VideoCard\n\t\t\t\t\t\t\t\t\t\tmediaType={type}\n\t\t\t\t\t\t\t\t\t\tvideoID={info.id}\n\t\t\t\t\t\t\t\t\t\tposterUrl={info.poster_path}\n\t\t\t\t\t\t\t\t\t\tname={info.original_name || info.title}\n\t\t\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t\t\tinfo.release_date ? info.release_date.split('-')[0] : info.first_air_date &&  info.first_air_date.split('-')[0]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\trating={info.vote_average}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Swiper>\n\t\t\t\t\t<button type=\"button\" className=\"slide-next\" onClick={()=>swiperNext()}><em>다음</em></button>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nListSlide.propTypes = {\n\tdata : PropTypes.array.isRequired,\n\ttitle : PropTypes.string,\n\ttype : PropTypes.string,\n}\n\n\nexport default ListSlide;","import React, {useEffect, useContext} from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ListSlide from 'Component/listSlide';\nimport { GState } from 'Router/GState';\n\nconst HomePresenter = ({moviePopular, tvPopular})=>{\n\tconst {setDepth1} = useContext(GState);\n\tconst {url} = useRouteMatch();\n\n\tuseEffect(()=>{\n\t\t// setDepth1('tv');\n\t\tsetDepth1(url.split('/')[1]);\n\t});\n\n\treturn(\n\t\t<div className=\"mainConts\">\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"TV\"\n\t\t\t\tdata={tvPopular}\n\t\t\t\ttype={'tv'}\n\t\t\t/>\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"MOVIE\"\n\t\t\t\tdata={moviePopular}\n\t\t\t\ttype={'movie'}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nHomePresenter.propTypes = {\n\tmoviePopular : PropTypes.array.isRequired,\n\ttvPopular : PropTypes.array.isRequired,\n}\n\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst Api = axios.create({\n\tbaseURL : \"https://api.themoviedb.org/3/\",\n\tparams : {\n\t\tapi_key : \"4efdcae366c925f5509cb9116e65e876\",\n\t\tlanguage : \"en-US\",\n\t}\n});\n\nconst tvApi = {\n\tairingToday: ()=> Api.get('tv/airing_today'),\n\tpopular: ()=> Api.get('tv/popular'),\n\ttopRated: ()=> Api.get('tv/top_rated'),\n}\n\nconst movieApi = {\n\tnowPlaying: ()=> Api.get('movie/now_playing'),\n\tpopular: ()=> Api.get('movie/popular'),\n\ttopRated: ()=> Api.get('movie/top_rated'),\n\tupcoming: ()=> Api.get('movie/upcoming'),\n}\n\nconst searchApi = {\n\tmovie: (keyword)=> Api.get('search/movie', {\n\t\tparams:{\n\t\t\tquery: encodeURIComponent(keyword)\n\t\t}\n\t}),\n\ttv: (keyword)=> Api.get('search/tv', {\n\t\tparams:{\n\t\t\tquery: encodeURIComponent(keyword)\n\t\t}\n\t}),\n\tkeyword: (keyword)=> Api.get('search/multi', {\n\t\tparams:{\n\t\t\tquery: encodeURIComponent(keyword)\n\t\t}\n\t}),\n}\n\nconst detailApi = {\n\tdetail: (type, id)=> Api.get(`${type}/${id}`, {\n\t\tparams:{\n\t\t\tappend_to_response:'videos'\n\t\t}\n\t})\n}\n\nexport {tvApi};\nexport {movieApi};\nexport {searchApi};\nexport {detailApi};","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi, tvApi } from \"Api/api\";\n\nexport default class extends React.Component{\n\tstate={\n\t\ttvPopular: null,\n\t\tmoviePopular: null,\n\t\terror: null,\n\t\tloading: true,\n\t};\n\n\tasync componentDidMount() {\n\t\ttry{\n\t\t\tconst {\n\t\t\t\tdata : {results : moviePopular}\n\t\t\t} = await movieApi.popular();\n\t\t\tconst {\n\t\t\t\tdata : {results : tvPopular}\n\t\t\t} = await tvApi.popular();\n\t\t\tthis.setState({\n\t\t\t\tmoviePopular,\n\t\t\t\ttvPopular,\n\t\t\t});\n\t\t}catch{\n\t\t\tthis.setState({\n\t\t\t\terror : \"Can'nt find video information\"\n\t\t\t});\n\t\t}finally{\n\t\t\tthis.setState({\n\t\t\t\tloading : false\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {tvPopular, moviePopular, error, loading} = this.state;\n\t\tif(!loading) {\n\t\t\t// console.log(this.state);\n\t\t\treturn(\n\t\t\t\t<HomePresenter\n\t\t\t\t\tmoviePopular={moviePopular}\n\t\t\t\t\ttvPopular={tvPopular}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn '';\n\t}\n};","import React, {useEffect, useContext} from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ListSlide from 'Component/listSlide';\nimport { GState } from 'Router/GState';\n\nconst TvPresenter = ({airingToday, topRated, popular})=>{\n\tconst {setDepth1} = useContext(GState);\n\tconst {url} = useRouteMatch();\n\n\tuseEffect(()=>{\n\t\tsetDepth1(url.split('/')[1]);\n\t});\n\n\treturn(\n\t\t<div className=\"contents\">\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"오늘편성\"\n\t\t\t\tdata={airingToday}\n\t\t\t\ttype={'tv'}\n\t\t\t/>\n\t\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"인기방송\"\n\t\t\t\tdata={popular}\n\t\t\t\ttype={'tv'}\n\t\t\t/>\n\t\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"비슷한콘텐츠\"\n\t\t\t\tdata={topRated}\n\t\t\t\ttype={'tv'}\n\t\t\t/>\n\n\t\t</div>\n\t)\n}\n\nTvPresenter.propTypes = {\n\tairingToday : PropTypes.array.isRequired,\n\ttopRated : PropTypes.array.isRequired,\n\tpopular : PropTypes.array.isRequired, \n}\n\nexport default TvPresenter;","import TvContainer from './TvContainer';\n\nexport default TvContainer;","import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"Api/api\";\n\nexport default class extends React.Component{\n\tstate={\n\t\tairingToday: null,\n\t\tpopular: null,\n\t\ttopRated: null,\n\t\terror: null,\n\t\tloading: true,\n\t};\n\n\tasync componentDidMount() {\n\t\ttry{\n\t\t\tconst {\n\t\t\t\tdata : {results : airingToday}\n\t\t\t} = await tvApi.airingToday();\n\t\t\tconst {\n\t\t\t\tdata : {results : topRated}\n\t\t\t} = await tvApi.topRated();\n\t\t\tconst {\n\t\t\t\tdata : {results : popular}\n\t\t\t} = await tvApi.popular();\n\t\t\tthis.setState({\n\t\t\t\tairingToday,\n\t\t\t\ttopRated,\n\t\t\t\tpopular,\n\t\t\t});\n\t\t}catch{\n\t\t\tthis.setState({\n\t\t\t\terror : \"Can'nt find video information\"\n\t\t\t});\n\t\t}finally{\n\t\t\tthis.setState({\n\t\t\t\tloading : false\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {airingToday, topRated, popular, error, loading} = this.state;\n\t\tif(!loading) {\n\t\t\t// console.log(this.state);\n\t\t\treturn(\n\t\t\t\t<TvPresenter\n\t\t\t\t\tairingToday={airingToday}\n\t\t\t\t\ttopRated={topRated}\n\t\t\t\t\tpopular={popular}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn '';\n\t}\n};","import React, {useEffect, useContext} from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ListSlide from 'Component/listSlide';\nimport { GState } from 'Router/GState';\n\nconst MoviePresenter = ({nowPlaying,upcoming,popular,topRated})=>{\n\tconst {setDepth1} = useContext(GState);\n\tconst {url} = useRouteMatch();\n\n\tuseEffect(()=>{\n\t\tsetDepth1(url.split('/')[1]);\n\t});\n\n\treturn(\n\t\t<div className=\"contents\">\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"개봉예정\"\n\t\t\t\tdata={upcoming}\n\t\t\t\ttype={'movie'}\n\t\t\t/>\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"개봉\"\n\t\t\t\tdata={nowPlaying}\n\t\t\t\ttype={'movie'}\n\t\t\t/>\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"인기영화\"\n\t\t\t\tdata={popular}\n\t\t\t\ttype={'movie'}\n\t\t\t/>\n\n\t\t\t<ListSlide\n\t\t\t\ttitle=\"비슷한영화\"\n\t\t\t\tdata={topRated}\n\t\t\t\ttype={'movie'}\n\t\t\t/>\n\n\t\t</div>\n\t);\n}\n\nMoviePresenter.propTypes = {\n\tnowPlaying : PropTypes.array.isRequired,\n\tupcoming : PropTypes.array.isRequired,\n\tpopular : PropTypes.array.isRequired,\n\ttopRated : PropTypes.array.isRequired,\n\t\n}\n\nexport default MoviePresenter;","import MovieContainer from './MovieContainer';\n\nexport default MovieContainer;","import React from \"react\";\nimport MoviePresenter from \"./MoviePresenter\";\nimport { movieApi } from \"Api/api\";\n\nexport default class extends React.Component{\n\tstate={\n\t\tnowPlaying: null,\n\t\tupcoming: null,\n\t\tpopular: null,\n\t\ttopRated: null,\n\t\terror: null,\n\t\tloading: true,\n\t};\n\n\tasync componentDidMount() {\n\t\ttry{\n\t\t\tconst {\n\t\t\t\tdata : {results : nowPlaying}\n\t\t\t} = await movieApi.nowPlaying();\n\t\t\tconst {\n\t\t\t\tdata : {results : upcoming}\n\t\t\t} = await movieApi.upcoming();\n\t\t\tconst {\n\t\t\t\tdata : {results : topRated}\n\t\t\t} = await movieApi.topRated();\n\t\t\tconst {\n\t\t\t\tdata : {results : popular}\n\t\t\t} = await movieApi.popular();\n\t\t\tthis.setState({\n\t\t\t\tnowPlaying,\n\t\t\t\tupcoming,\n\t\t\t\ttopRated,\n\t\t\t\tpopular,\n\t\t\t});\n\t\t}catch{\n\t\t\tthis.setState({\n\t\t\t\terror : \"Can'nt find video information\"\n\t\t\t});\n\t\t}finally{\n\t\t\tthis.setState({\n\t\t\t\tloading : false\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {nowPlaying, upcoming, popular, topRated, error, loading} = this.state;\n\t\tif(!loading) {\n\t\t\t// console.log(this.state);\n\t\t\treturn(\n\t\t\t\t<MoviePresenter\n\t\t\t\t\tnowPlaying={nowPlaying}\n\t\t\t\t\tupcoming={upcoming}\n\t\t\t\t\tpopular={popular}\n\t\t\t\t\ttopRated={topRated}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn '';\n\t}\n};","import React, {useEffect, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { GState } from 'Router/GState';\nimport VideoCard from 'Component/VideoCard';\n\nconst SearchPresenter = ({searchResults, keyword})=>{\n\tconst {setDepth1} = useContext(GState);\n\t// const {url} = useRouteMatch();\n\n\tuseEffect(()=>{\n\t\tsetDepth1('search');\n\t});\n\n\treturn(\n\t\t<div className=\"contents\">\n\t\t\t<div className=\"srchKeywordWrap\">\n\t\t\t\t<strong>{keyword}</strong> 검색 결과입니다.\n\t\t\t</div>\n\t\t\t<div className=\"listWrap\">\n\t\t\t\t<ul>\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchResults && searchResults.length > 0 &&\n\t\t\t\t\t\tsearchResults.map((info, i)=>(\n\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t<VideoCard\n\t\t\t\t\t\t\t\t\tmediaType={info.release_date ? 'movie' : 'tv'}\n\t\t\t\t\t\t\t\t\tvideoID={info.id}\n\t\t\t\t\t\t\t\t\tposterUrl={info.poster_path ? info.poster_path : ''}\n\t\t\t\t\t\t\t\t\tname={info.original_name || info.original_title}\n\t\t\t\t\t\t\t\t\tdate={\n\t\t\t\t\t\t\t\t\t\tinfo.release_date ? info.release_date.split('-')[0] : info.first_air_date && info.first_air_date.split('-')[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trating={info.vote_average}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nSearchPresenter.propTypes = {\n\tsearchResults : PropTypes.array.isRequired,\n\tkeyword : PropTypes.string.isRequired,\n}\n\nexport default SearchPresenter;","import React, {useContext, useEffect} from 'react';\nimport { GState } from 'Router/GState';\n\nconst SearchNoDataPresenter = ({keyword})=>{\n\tconst {setDepth1} = useContext(GState);\n\n\tuseEffect(()=>{\n\t\tsetDepth1('search');\n\t});\n\n\treturn(\n\t\t<div className=\"contents\">\n\t\t\t<div className=\"searchNoDataBox\">\n\t\t\t\t<strong>{keyword}</strong> 검색 결과가 없습니다.\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default SearchNoDataPresenter;","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport SearchNoDataPresenter from \"./SearchNoDataPresenter\";\nimport { searchApi } from \"Api/api\";\n\nexport default class extends React.Component{\n\tstate={\n\t\tkeyword: null,\n\t\tsearchResults: null,\n\t\terror: null,\n\t\tloading: true,\n\t};\n\n\tasync componentDidMount() {\n\t\tconst {\n\t\t\tmatch : {\n\t\t\t\tparams : {\n\t\t\t\t\tkeyword,\n\t\t\t\t}\n\t\t\t}\n\t\t} = this.props;\n\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: {results : tvResults}\n\t\t\t} = await searchApi.tv(keyword.replace(':', ''));\n\t\t\tconst {\n\t\t\t\tdata: {results : movieResults}\n\t\t\t} = await searchApi.movie(keyword.replace(':', ''));\n\n\t\t\tthis.setState({\n\t\t\t\tkeyword : keyword.replace(':', ''),\n\t\t\t\tsearchResults : [...tvResults, ...movieResults],\n\t\t\t});\n\t\t} catch {\n\t\t\tthis.setState({ error: \"Can't find results.\" });\n\t\t} finally {\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {searchResults, keyword, error, loading} = this.state;\n\n\t\tif(!loading) {\n\t\t\t// console.log(this.state);\n\t\t\tif(searchResults.length > 0) {\n\t\t\t\treturn(\n\t\t\t\t\t<SearchPresenter\n\t\t\t\t\t\tkeyword={keyword}\n\t\t\t\t\t\tsearchResults={searchResults}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<SearchNoDataPresenter\n\t\t\t\t\t\tkeyword={keyword}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n};","import React, {useEffect, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { GState } from 'Router/GState';\n\nconst DetailPresenter = ({result, type})=>{\n\tconst {setDepth1} = useContext(GState);\n\t\n\tuseEffect(()=>{\n\t\tsetDepth1(type);\n\t});\n\n\treturn(\n\t\t<div className=\"contents\">\n\n\t\t\t<div className=\"videoDetailWrap\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"posterBox\">\n\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500/${result.poster_path}`} alt={`${result.original_name || result.name}`} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"infoBox\">\n\t\t\t\t\t\t<strong className=\"name\">{result.original_name || result.original_title}</strong>\n\t\t\t\t\t\t<div className=\"easyInfo\">\n\t\t\t\t\t\t\t{result.release_date && //영화 개봉일\n\t\t\t\t\t\t\t\t<span>{result.release_date.split('-')[0]}</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ result.runtime && // 영화 런닝타임\n\t\t\t\t\t\t\t\t<span>{result.runtime}min</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{result.first_air_date && //TV 방영일\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{`${result.first_air_date.split('-')[0]}/${result.first_air_date.split('-')[1]}`} ~ {result.last_air_date && `${result.last_air_date.split('-')[0]}/${result.last_air_date.split('-')[1]}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ result.episode_run_time && // TV 런닝타임\n\t\t\t\t\t\t\t\t<span>{result.episode_run_time[0]}min</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ result.genres && //장르\n\t\t\t\t\t\t\t\t<span className=\"genres\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresult.genres.map((genres, i)=>(\n\t\t\t\t\t\t\t\t\t\t\t<span key={i}>{genres.name}</span>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"summary\">\n\t\t\t\t\t\t\t{result.overview}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nDetailPresenter.propTypes = {\n\tresult : PropTypes.object.isRequired,\n\ttype : PropTypes.string.isRequired,\n}\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { detailApi } from \"Api/api\";\n\nexport default class extends React.Component{\n\tstate={\n\t\ttype: null,\n\t\tresult: null,\n\t\terror: null,\n\t\tloading: true,\n\t};\n\n\tasync componentDidMount() {\n\t\tconst {\n\t\t\tmatch : {\n\t\t\t\tparams : {\n\t\t\t\t\tid : videoID,\n\t\t\t\t\ttype,\n\t\t\t\t}\n\t\t\t}\n\t\t} = this.props;\n\n\t\ttry{\n\t\t\tconst {\n\t\t\t\tdata : result\n\t\t\t} = await detailApi.detail(type.replace(':', ''), parseInt(videoID.replace(':', ''), 10));\n\n\t\t\tthis.setState({\n\t\t\t\tresult,\n\t\t\t\ttype:type.replace(':', ''),\n\t\t\t});\n\t\t}catch{\n\t\t\tthis.setState({\n\t\t\t\terror : \"Can'nt find video information\"\n\t\t\t});\n\t\t}finally{\n\t\t\tthis.setState({\n\t\t\t\tloading : false\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {result, type, error, loading} = this.state;\n\t\tif(!loading) {\n\t\t\t// console.log(this.state);\n\t\t\treturn(\n\t\t\t\t<DetailPresenter\n\t\t\t\t\tresult={result}\n\t\t\t\t\ttype={type}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn '';\n\n\t}\n};","import React from \"react\";\nimport {\n\tBrowserRouter as BRouter,\n\tRoute,\n\tSwitch,\n\tRedirect,\n} from 'react-router-dom';\nimport Header from 'Layout/Header';\nimport Home from 'Page/Home';\nimport Tv from 'Page/Tv';\nimport Movie from 'Page/Movie';\nimport Search from 'Page/Search';\nimport Detail from 'Page/Detail';\n\nconst RouterSet = () => {\n\treturn (\n\t\t<BRouter>\n\t\t\t<Header />\n\t\t\t{/* <Gnb /> */}\n\t\t\t<div id=\"container\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/tv\" exact component={Tv} />\n\t\t\t\t\t<Route path=\"/movie\" exact component={Movie} />\n\t\t\t\t\t<Route path=\"/detail/:type/:id\" exact component={Detail} />\n\t\t\t\t\t<Route path=\"/search/:keyword\" exact component={Search} />\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t\t{/* <Footer /> */}\n\t\t</BRouter>\n\t);\n}\n\nexport default RouterSet;","import React from 'react';\nimport RouterSet from 'Router/RouterSet';\nimport GStateProvider from 'Router/GState';\n\nconst App = () => {\n\treturn (\n\t\t<GStateProvider>\n\t\t\t<RouterSet />\n\t\t</GStateProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Router/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}